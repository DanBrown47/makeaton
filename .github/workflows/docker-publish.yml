name: Docker Publish
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    
env:
  # Use ghcr.io Github Registry
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: greenify
  REPO_NAME: danbrown47/makeaton


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Log into registry
        run: sudo /usr/bin/docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io 
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ env.REPO_NAME }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          
          echo VERSION=$VERSION
          sudo /usr/bin/docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          sudo /usr/bin/docker tag $IMAGE_NAME $IMAGE_ID:$VERSION$NOW$SHORT_SHA
          sudo /usr/bin/docker push $IMAGE_ID:$VERSION
          sudo /usr/bin/docker push $IMAGE_ID:$VERSION$NOW$SHORT_SHA

